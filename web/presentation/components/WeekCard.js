/**
 * Week Card Component - Presentation Layer
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ–¥–µ–ª–∏
 */
export class WeekCard {
    constructor(year, week, githubConfig) {
        this.year = year;
        this.week = week;
        this.githubConfig = githubConfig;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç DOM —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
     */
    createElement() {
        const card = document.createElement('div');
        card.className = 'pixel-card week-card';
        card.setAttribute('data-week', this.week.getId());
        card.setAttribute('data-year', this.year);

        card.innerHTML = this._getCardHTML();
        this._attachEventListeners(card);
        
        return card;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML —Ä–∞–∑–º–µ—Ç–∫—É –∫–∞—Ä—Ç–æ—á–∫–∏
     */
    _getCardHTML() {
        const meta = this.week.getFormattedMeta();
        const resources = this.week.getFormattedResources(
            this.githubConfig.githubRepo, 
            this.githubConfig.githubBranch
        );

        // Convert FontAwesome icons to emojis for pixel theme
        const iconMap = {
            'fas fa-calendar-alt': 'üìÖ',
            'fas fa-clock': '‚è∞',
            'fas fa-tag': 'üè∑Ô∏è',
            'fas fa-fire': 'üî•',
            'fas fa-star': '‚≠ê',
            'fas fa-brain': 'üß†',
            'fas fa-robot': 'ü§ñ',
            'fas fa-chart-line': 'üìä',
            'fas fa-file-pdf': 'üìÑ',
            'fas fa-code': 'üíª',
            'fas fa-play': '‚ñ∂Ô∏è',
            'fas fa-download': '‚¨áÔ∏è',
            'fas fa-external-link-alt': 'üîó'
        };

        const metaHTML = meta.map(item => {
            const emoji = iconMap[item.icon] || 'üìå';
            if (item.type === 'tag') {
                return `<span class="pixel-tag">${emoji} ${item.text}</span>`;
            }
            return `<span style="font-family: var(--pixel-font-display); font-size: var(--pixel-font-xs); color: var(--pixel-ink-soft);">${emoji} ${item.text}</span>`;
        }).join('');

        const resourcesHTML = resources.map(resource => {
            const emoji = iconMap[resource.icon] || 'üîó';
            if (resource.url) {
                return `<a href="${resource.url}" target="_blank" class="pixel-btn pixel-btn--sm" style="font-size: var(--pixel-font-xs);">${emoji} ${resource.text}</a>`;
            }
            return `<span class="pixel-badge" data-icon="${emoji}">${resource.text}</span>`;
        }).join('');

        // Generate random quest difficulty
        const difficulties = [
            { level: 'Beginner', emoji: 'üü¢', color: 'success' },
            { level: 'Intermediate', emoji: 'üü°', color: 'warning' },
            { level: 'Advanced', emoji: 'üü†', color: 'danger' },
            { level: 'Expert', emoji: 'üî¥', color: 'secondary' }
        ];
        const difficulty = difficulties[Math.floor(Math.random() * difficulties.length)];

        return `
            <!-- Game Cartridge Header -->
            <div class="pixel-flex pixel-flex-between pixel-mb-2" style="align-items: flex-start;">
                <div class="pixel-flex pixel-gap-2">
                    <div style="font-size: 2rem;">üìú</div>
                    <div>
                        <h3 style="font-family: var(--pixel-font-display); font-size: var(--pixel-font-base); margin-bottom: var(--px-unit-half); color: var(--pixel-ink);">
                            ${this.week.title}
                        </h3>
                        <div class="pixel-badge pixel-badge--${difficulty.color}" data-icon="${difficulty.emoji}">
                            ${difficulty.level} Quest
                        </div>
                    </div>
                </div>
                <div style="font-size: 1.5rem;">‚öîÔ∏è</div>
            </div>

            <!-- Quest Details -->
            <div class="pixel-mb-3">
                <div class="pixel-flex pixel-flex-wrap pixel-gap-1 pixel-mb-2">
                    ${metaHTML}
                </div>
                <p style="font-size: var(--pixel-font-sm); line-height: var(--pixel-line-relaxed); margin-bottom: var(--pixel-space-2); color: var(--pixel-ink-soft);">
                    ${this.week.getSummary()}
                </p>

                <!-- XP Reward -->
                <div class="pixel-progress pixel-mb-2">
                    <div class="pixel-progress__bar" style="width: ${Math.floor(Math.random() * 40 + 60)}%;"></div>
                    <div class="pixel-progress__label" style="font-size: var(--pixel-font-xs);">+${Math.floor(Math.random() * 50 + 50)} XP</div>
                </div>

                <!-- Action Buttons -->
                <div class="pixel-flex pixel-gap-2">
                    <button class="pixel-btn pixel-btn--primary pixel-btn--sm read-review" style="flex: 1;">
                        üéÆ Start Quest
                    </button>
                    <button class="pixel-btn pixel-btn--secondary pixel-btn--sm" style="min-width: auto;" title="Add to wishlist">
                        üíæ
                    </button>
                </div>
            </div>

            <!-- Resources (Inventory Items) -->
            <div class="pixel-flex pixel-flex-wrap pixel-gap-1" style="padding-top: var(--pixel-space-2); border-top: var(--pixel-border-thin);">
                ${resourcesHTML}
            </div>
        `;
    }

    /**
     * –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
     */
    _attachEventListeners(card) {
        const readButton = card.querySelector('.read-review');
        if (readButton) {
            readButton.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ
                this._onReadReview();
            });
        }

        // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ - —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ –¥–æ–ª–∂–Ω–∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –æ–±–∑–æ—Ä
        // card.addEventListener('click', ...) - —É–¥–∞–ª–µ–Ω–æ

        // –£–±–∏—Ä–∞–µ–º –∫—É—Ä—Å–æ—Ä pointer —Å –∫–∞—Ä—Ç–æ—á–∫–∏, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–Ω–æ–ø–∫–µ
        card.style.cursor = 'default';
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–±–∑–æ—Ä–∞
     */
    _onReadReview() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–π readingModal
        if (window.readingModal) {
            const title = `${this.year} Week ${this.week.getId()}: ${this.week.title}`;
            
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            window.readingModal.open(title);
            
            // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)
            setTimeout(() => {
                const content = `
                    <h1>${this.week.title}</h1>
                    <h2>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</h2>
                    <p>–≠—Ç–æ –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ–±–∑–æ—Ä —Å—Ç–∞—Ç—å–∏ "${this.week.title}" –∑–∞ ${this.year} –≥–æ–¥, –Ω–µ–¥–µ–ª—è ${this.week.getId()}.</p>
                    
                    <h3>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏</h3>
                    <ul>
                        <li>–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ä–µ—à–µ–Ω–∏—é –∑–∞–¥–∞—á</li>
                        <li>–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤</li>
                        <li>–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</li>
                    </ul>
                    
                    <h3>–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è</h3>
                    <p>–í –¥–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–µ—Ä–µ–¥–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.</p>
                    
                    <blockquote>
                        <p>–≠—Ç–æ—Ç –æ–±–∑–æ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —á—Ç–µ–Ω–∏—è —Å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–æ–π –∏ —É–¥–æ–±–Ω—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º.</p>
                    </blockquote>
                    
                    <h3>–ó–∞–∫–ª—é—á–µ–Ω–∏–µ</h3>
                    <p>–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã –≤ –æ–±–ª–∞—Å—Ç–∏ –ò–ò –∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.</p>
                `;
                window.readingModal.setContent(content);
            }, 1500);
        } else {
            // Fallback - —Å–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            const event = new CustomEvent('openReview', {
                detail: {
                    year: this.year,
                    weekId: this.week.getId(),
                    title: this.week.title
                }
            });
            
            document.dispatchEvent(event);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ä—Ç–æ—á–∫–∏
     */
    update(week) {
        this.week = week;
        // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        // –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
     */
    matchesSearch(query) {
        const searchTerm = query.toLowerCase();
        return (
            this.week.title.toLowerCase().includes(searchTerm) ||
            this.week.description.toLowerCase().includes(searchTerm) ||
            this.week.tags.some(tag => tag.toLowerCase().includes(searchTerm))
        );
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–µ–≥
     */
    hasTag(tag) {
        return this.week.hasTag(tag);
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É
     */
    show() {
        const element = document.querySelector(`[data-week="${this.week.getId()}"][data-year="${this.year}"]`);
        if (element) {
            element.style.display = 'block';
        }
    }

    /**
     * –°–∫—Ä—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É
     */
    hide() {
        const element = document.querySelector(`[data-week="${this.week.getId()}"][data-year="${this.year}"]`);
        if (element) {
            element.style.display = 'none';
        }
    }

    /**
     * –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –ø–æ–∏—Å–∫–µ)
     */
    highlight(searchTerm) {
        const element = document.querySelector(`[data-week="${this.week.getId()}"][data-year="${this.year}"]`);
        if (!element || !searchTerm) return;

        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–∏
        const title = element.querySelector('.week-card-title');
        const description = element.querySelector('.week-card-desc');
        
        if (title) {
            title.innerHTML = this._highlightText(this.week.title, searchTerm);
        }
        
        if (description) {
            description.innerHTML = this._highlightText(this.week.getSummary(), searchTerm);
        }
    }

    /**
     * –£–±–∏—Ä–∞–µ—Ç –ø–æ–¥—Å–≤–µ—Ç–∫—É
     */
    removeHighlight() {
        const element = document.querySelector(`[data-week="${this.week.getId()}"][data-year="${this.year}"]`);
        if (!element) return;

        const title = element.querySelector('.week-card-title');
        const description = element.querySelector('.week-card-desc');
        
        if (title) {
            title.textContent = this.week.title;
        }
        
        if (description) {
            description.textContent = this.week.getSummary();
        }
    }

    /**
     * –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
     */
    _highlightText(text, searchTerm) {
        if (!searchTerm) return text;
        
        const regex = new RegExp(`(${searchTerm})`, 'gi');
        return text.replace(regex, '<mark>$1</mark>');
    }
} 