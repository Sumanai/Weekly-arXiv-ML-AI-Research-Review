# Memory Bank Learning Journal

*–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∂—É—Ä–Ω–∞–ª –æ–±—É—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ SGR Research*  
*–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 2025-09-05*

## –û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã –æ–±—É—á–µ–Ω–∏—è

–≠—Ç–æ—Ç —Ñ–∞–π–ª —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –∫–ª—é—á–µ–≤—ã–µ –∑–Ω–∞–Ω–∏—è, –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ insights, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º Schema Guided Reasoning. –¶–µ–ª—å - –æ–±–µ—Å–ø–µ—á–∏—Ç—å continuity –∑–Ω–∞–Ω–∏–π –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏ –∏ —É–ª—É—á—à–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±—É–¥—É—â–∏—Ö –∏—Ç–µ—Ä–∞—Ü–∏–π.

## –í—ã—É—á–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ insights

### 1. Schema Design Patterns

#### –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–∏–Ω—Ü–∏–ø: Explicit over Implicit
**–û–±–Ω–∞—Ä—É–∂–µ–Ω**: –ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Memory Bank  
**–ü–∞—Ç—Ç–µ—Ä–Ω**: –õ—É—á—à–µ —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ —Å—Ö–µ–º–∞—Ö, —á–µ–º –ø–æ–ª–∞–≥–∞—Ç—å—Å—è –Ω–∞ –Ω–µ—è–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞

```python
# ‚ùå –ù–µ—è–≤–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
class Step(BaseModel):
    actions: List[str]  # –°–∫–æ–ª—å–∫–æ actions? –ù–µ –ø–æ–Ω—è—Ç–Ω–æ

# ‚úÖ –Ø–≤–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ  
class Step(BaseModel):
    actions: Annotated[List[str], MinLen(1), MaxLen(3)] = Field(
        description="1-3 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"
    )
```

**–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ**: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–æ –≤—Å–µ—Ö –±—É–¥—É—â–∏—Ö —Å—Ö–µ–º–∞—Ö Annotated types —Å constraints

#### Anti-Cycling —á–µ—Ä–µ–∑ Schema Design
**–û–±–Ω–∞—Ä—É–∂–µ–Ω**: –ü—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∫–æ–¥–∞ sgr-deep-research.py  
**–ü–∞—Ç—Ç–µ—Ä–Ω**: Counters –∏ boolean flags –≤ —Å—Ö–µ–º–∞—Ö –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—Ç –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ

```python
class NextStep(BaseModel):
    searches_done: int = Field(description="MAX 3-4 searches")  
    enough_data: bool = Field(description="Stop condition")
    clarification_used: bool  # Context flag
```

**Insight**: LLM –±–µ–∑ explicit limits –º–æ–≥—É—Ç –∑–∞—Ü–∏–∫–ª–∏–≤–∞—Ç—å—Å—è. Schema constraints - —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.

### 2. Memory Bank Organization  

#### –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–Ω–∞–Ω–∏–π
**–û–±–Ω–∞—Ä—É–∂–µ–Ω**: –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã memory/memory-bank/  
**–ü–∞—Ç—Ç–µ—Ä–Ω**: –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã ‚Üí –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã ‚Üí –ê–∫—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç

```
projectbrief.md     # –§—É–Ω–¥–∞–º–µ–Ω—Ç - —Ü–µ–ª–∏ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
‚Üì
productContext.md   # –ü—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è
techContext.md      # –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏  
systemPatterns.md   # –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
‚Üì  
activeContext.md    # –¢–µ–∫—É—â–∏–π —Ñ–æ–∫—É—Å
progress.md         # –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å
```

**–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ**: –í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞—Ç—å —Å projectbrief.md –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

#### –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ layers
**Insight**: –ö–∞–∂–¥—ã–π —Ñ–∞–π–ª Memory Bank –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ä–∞–∑–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏:
- **projectbrief.md**: High-level goals –∏ requirements
- **techContext.md**: Implementation details –∏ dependencies  
- **systemPatterns.md**: Code-level patterns –∏ best practices
- **activeContext.md**: Immediate next steps –∏ current blockers

### 3. Documentation Strategy

#### Russian-first –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏  
**–û–±–Ω–∞—Ä—É–∂–µ–Ω**: –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Å–µ—Ö .md —Ñ–∞–π–ª–æ–≤  
**–†–µ—à–µ–Ω–∏–µ**: –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –¥–ª—è Memory Bank, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è code comments

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ**: 
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º
- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è –ø—Ä–æ—â–µ –Ω–∞ —Ä–æ–¥–Ω–æ–º —è–∑—ã–∫–µ
- Code –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –¥–ª—è universal accessibility

#### Structured Markdown —Å consistent formatting
**–ü–∞—Ç—Ç–µ—Ä–Ω**: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, headers, –∏ code blocks –¥–ª—è structured information

```markdown
### –°–µ–∫—Ü–∏—è
| –ö–æ–º–ø–æ–Ω–µ–Ω—Ç | –°—Ç–∞—Ç—É—Å | –ú–µ—Ç—Ä–∏–∫–∏ |
|-----------|--------|---------|
| **Item**  | ‚úÖ Ready | Details |

#### Sub-—Å–µ–∫—Ü–∏—è
- ‚úÖ Completed items
- ‚è≥ In progress
- üéØ Future goals
```

### 4. Context Management Patterns

#### State Preservation –º–µ–∂–¥—É sessions
**–ü—Ä–æ–±–ª–µ–º–∞**: AI agent —Ç–µ—Ä—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –º–µ–∂–¥—É –∑–∞–ø—É—Å–∫–∞–º–∏  
**–†–µ—à–µ–Ω–∏–µ**: Memory Bank –∫–∞–∫ persistent knowledge store

**–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è preservation**:
- Current project phase
- Key architectural decisions —Å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏—è–º–∏
- Known limitations –∏ workarounds
- Next steps priority order

#### Context Size Optimization  
**Insight**: Memory Bank —Ñ–∞–π–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å comprehensive, –Ω–æ –Ω–µ overwhelming

**–ù–∞–π–¥–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å**:
- projectbrief.md: ~60 —Å—Ç—Ä–æ–∫ (high-level overview)
- productContext.md: ~120 —Å—Ç—Ä–æ–∫ (detailed analysis) 
- techContext.md: ~150 —Å—Ç—Ä–æ–∫ (implementation details)
- systemPatterns.md: ~200 —Å—Ç—Ä–æ–∫ (architectural patterns)

### 5. Project-Specific Learnings

#### SGR Schema Design Best Practices
**–í—ã—É—á–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã**:

1. **Union routing**: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Union types –¥–ª—è routing –º–µ–∂–¥—É actions
```python
function: Union[Clarification, GeneratePlan, WebSearch, ...]
```

2. **Progress tracking**: –í–∫–ª—é—á–∞—Ç—å counters –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è infinite loops
```python
searches_done: int = Field(description="MAX 3-4 searches")  
```

3. **Language consistency**: Preserve original user request –¥–ª—è language detection
```python
user_request_language_reference: str = Field(
    description="Copy of original request for language consistency"
)
```

#### Citation Management Pattern
**–û–±–Ω–∞—Ä—É–∂–µ–Ω**: –í –∫–æ–¥–µ add_citation() function  
**–ü–∞—Ç—Ç–µ—Ä–Ω**: Centralized citation —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å deduplication

```python
def add_citation(url: str, title: str = "") -> int:
    if url in CONTEXT["sources"]:
        return CONTEXT["sources"][url]["number"]
    # Auto-increment logic
```

**Insight**: –õ—É—á—à–µ centralized —Å–∏—Å—Ç–µ–º–∞ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —á–µ–º manual tracking

#### Configuration Management
**Best practice**: YAML + Environment Variables combo
```python
# Flexible configuration hierarchy
config.yaml (defaults) ‚Üí env variables (overrides) ‚Üí runtime parameters
```

## –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

### Communication Style  
- **–Ø–∑—ã–∫**: –†—É—Å—Å–∫–∏–π –¥–ª—è internal communication, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è code
- **–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è**: Comprehensive documentation —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏
- **–°—Ç—Ä—É–∫—Ç—É—Ä–∞**: Clear hierarchies —Å explicit relationships –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏

### Technical Preferences
- **Type safety**: –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ Pydantic models —Å explicit validation
- **Documentation**: Inline docstrings + separate documentation files
- **Error handling**: Graceful degradation —Å clear error messages

### Project Management Style
- **Planning**: Structured approach —Å explicit todos –∏ progress tracking
- **Quality**: Code quality –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞–¥ speed
- **Maintainability**: Long-term maintainability –≤–∞–∂–Ω–µ–µ short-term convenience

## –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –∑–∞–¥–∞—á–∏

### Memory Bank Maintenance
**Frequency**: –ü—Ä–∏ –∫–∞–∂–¥–æ–º significant project change  
**Actions**:
1. –û–±–Ω–æ–≤–∏—Ç—å activeContext.md —Å current focus
2. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ patterns –≤ systemPatterns.md  
3. –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å learnings –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ
4. –û–±–Ω–æ–≤–∏—Ç—å progress.md —Å—Ç–∞—Ç—É—Å—ã

### Schema Evolution
**Trigger**: –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö capabilities  
**Process**:
1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å existing schemas –¥–ª—è consistency
2. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ Union options –≤ NextStep.function
3. –°–æ–∑–¥–∞—Ç—å specialized Pydantic models  
4. –û–±–Ω–æ–≤–∏—Ç—å dispatch() function –¥–ª—è handling –Ω–æ–≤—ã—Ö types

### Documentation Sync
**Requirement**: Keep Memory Bank –≤ sync —Å actual implementation  
**Checklist**:
- [ ] Code changes reflected –≤ techContext.md
- [ ] New patterns documented –≤ systemPatterns.md
- [ ] Progress updated –≤ activeContext.md –∏ progress.md

## –ò–∑–±–µ–≥–∞—Ç—å –≤ –±—É–¥—É—â–µ–º

### –ê–Ω—Ç–∏–ø–∞—Ç—Ç–µ—Ä–Ω—ã
1. **Schema over-engineering**: –ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–∑–ª–∏—à–Ω–µ —Å–ª–æ–∂–Ω—ã–µ —Å—Ö–µ–º—ã
2. **Context pollution**: –ò–∑–±–µ–≥–∞—Ç—å loading –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –≤ –∫–∞–∂–¥—ã–π prompt
3. **Hardcoded limits**: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å configurable parameters –≤–º–µ—Å—Ç–æ magic numbers

### Known Pitfalls
1. **Language mixing**: –ù–µ mix —Ä—É—Å—Å–∫–∏–π –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –≤ –æ–¥–Ω–æ–º document section
2. **Outdated documentation**: Regular updates Memory Bank –ø—Ä–∏ code changes
3. **Missing error handling**: Always include graceful degradation paths

## Metrics –¥–ª—è Success

### Documentation Quality
- **Completeness**: –í—Å–µ major components –∑–∞–¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã
- **Clarity**: –ü–æ–Ω—è—Ç–Ω–æ –¥–ª—è future AI agents –∏ human developers  
- **Consistency**: Unified style across –≤—Å–µ—Ö files
- **Actionability**: Clear next steps –∏ decision points

### Code Quality  
- **Type coverage**: 100% functions –∏–º–µ—é—Ç type hints
- **Schema coverage**: –í—Å–µ actions covered by Pydantic models
- **Error handling**: Comprehensive exception handling
- **Testing readiness**: Modular structure –¥–ª—è easy unit testing

## –ë—É–¥—É—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è

### –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏
1. **Performance optimization**: –ò–∑—É—á–∏—Ç—å token usage patterns
2. **Error scenario handling**: –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å edge cases –∏ recovery strategies
3. **Multi-agent coordination**: –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è complex agent interactions
4. **Schema versioning**: Strategies –¥–ª—è backward compatibility

### –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
- –ö–∞–∫ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å schema design –¥–ª—è better LLM performance?
- –ö–∞–∫–∏–µ patterns –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã –¥–ª—è preventing hallucinations?
- –ö–∞–∫ –ª—É—á—à–µ structure Memory Bank –¥–ª—è different project types?

---

**–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ**: 2025-09-05  
**–°–ª–µ–¥—É—é—â–∞—è —Ä–µ–≤–∏–∑–∏—è**: –ü–æ—Å–ª–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SGR –∞–≥–µ–Ω—Ç–∞  
**–í–µ—Ä—Å–∏—è –∂—É—Ä–Ω–∞–ª–∞**: 1.0 (Initial Memory Bank setup)